data <- read.csv("./Data_16nov.csv")
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(FactoInvestigate)
library(corrplot)
data <- read.csv("./Data_16nov.csv")
ggplot(data, aes(x=disengaged))+geom_histogram()
ggplot(data, aes(x=looking))+geom_histogram()
ggplot(data, aes(x=talking))+geom_histogram()
ggplot(data, aes(x=intTech))+geom_histogram()
ggplot(data, aes(x=intRes))+geom_histogram()
ggplot(data, aes(x=intExt))+geom_histogram()
ggplot(data, aes(x=Accessed))+geom_histogram()
ggplot(data, aes(x=Create))+geom_histogram()
ggplot(data, aes(x=Open))+geom_histogram()
ggplot(data, aes(x=Update))+geom_histogram()
print(data[4])
print(data[0])
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
pca1 <- PCA(data[,4:13], scale.unit = F, ncp=10, graph=T)
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
summary(mfa1)
plot(mfa1)
print(pca1)
print(pca1$var)
print(pca1$var$coord)
print(pca1)
print(pca1$ind)
print(pca1$ind$coord)
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
data <- read.csv("./Data_16nov.csv")
ggplot(data, aes(x=disengaged))+geom_histogram()
ggplot(data, aes(x=looking))+geom_histogram()
ggplot(data, aes(x=talking))+geom_histogram()
ggplot(data, aes(x=intTech))+geom_histogram()
ggplot(data, aes(x=intRes))+geom_histogram()
ggplot(data, aes(x=intExt))+geom_histogram()
ggplot(data, aes(x=Accessed))+geom_histogram()
ggplot(data, aes(x=Create))+geom_histogram()
ggplot(data, aes(x=Open))+geom_histogram()
ggplot(data, aes(x=Update))+geom_histogram()
print(data[0])
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
data$pc1 <- pca1$ind$coord[,1]
data$pc2 <- pca1$ind$coord[,2]
corrplot(cor(data[,4:15]),method="number")
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
print(pca1)
print(pca1$eig)
print($ind$contrib)
print(pca1$ind$contrib)
print(pca1$var$contrib)
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
print($var$cor)
print(pca1$var$cor)
# Isomap code
iso = Isomap(data[,4:13],dims=2,k=5)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RDRToolbox", version = "3.8")
# Isomap code
iso = Isomap(data[,4:13],dims=2,k=5)
library(BiocManager)
# Isomap code
iso = Isomap(data[,4:13],dims=2,k=5)
library(RDRToolbox)
mfa2 <- MFA(data[,c(4:9,11:13)], group=c(6,3), type=c("s", "c"), ncp=9, name.group=c("obs","logs"))
fviz_screeplot(mfa2)
plot(mfa2, axes=c(1,3), choix="var")
names(mfa1)
names(data)
data$time = as.POSIXct(data$timestamp)
ggplot(data[data$group=="1AB",], aes(x=time, y=Engagement, color=group))+geom_line()
ggplot(data[data$group=="1AB",], aes(x=time, y=PhysvsTech, color=group))+geom_line()
data$Engagement <- mfa1$ind$coord[,1]
data$PhysvsTech <- mfa1$ind$coord[,2]
ggplot(data[data$group=="1AB",], aes(x=time, y=PhysvsTech, color=group))+geom_line()
ggplot(data[data$group=="1AB",], aes(x=time, y=Engagement, color=group))+geom_line()
ggplot(data[data$group=="1AB",], aes(x=time, y=PhysvsTech, color=group))+geom_line()
# Isomap code
iso = Isomap(data[,4:13],dims=2,k=5)
library(RDRToolbox)
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(FactoInvestigate)
library(corrplot)
library(RDRToolbox)
data <- read.csv("./Data_16nov.csv")
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
data$pc1 <- pca1$ind$coord[,1]
data$pc2 <- pca1$ind$coord[,2]
print(pca1$var$cor)
corrplot(cor(data[,4:15]),method="number")
pca1 <- PCA(data[,4:13], scale.unit = T, ncp=10, graph=T)
# Isomap code
iso = Isomap(data[,4:13],dims=2,k=5)
iso = Isomap(temp,dims=2,k=5)
# Isomap code
temp <- dadta[,4:13]
# Isomap code
temp <- data[,4:13]
iso = Isomap(temp,dims=2,k=5)
print(typeof(temp))
print(temp)
# Isomap code
temp <- marix(unlist(data[,4:13]),ncol=10,byrow=TRUE)
# Isomap code
temp <- matrix(unlist(data[,4:13]),ncol=10,byrow=TRUE)
iso = Isomap(temp,dims=2,k=5)
print(iso)
print(iso[,0])
print(iso$dim2[,0])
data$Engagement <- iso$dim2[,1]
data$PhysvsTech <- iso$dim2[,2]
M <- cor(data[,4:15])
corrplot(M, method="number")
M <- cor(data[,4:17])
corrplot(M, method="number")
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
# The data is skewed! any transformation to make it a different distribution?
# Leave Accessed out
# Binarize log variables
# ...
print(data[10])
# The data is skewed! any transformation to make it a different distribution?
# Leave Accessed out
# Binarize log variables
# ...
print(data[,4:9])
# The data is skewed! any transformation to make it a different distribution?
# Leave Accessed out
# Binarize log variables
# ...
print(data[,11:13])
mfa2 <- MFA(data[,c(4:9,11:13)], group=c(6,3), type=c("s", "c"), ncp=9, name.group=c("obs","logs"))
fviz_screeplot(mfa2)
plot(mfa2, axes=c(1,3), choix="var")
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
summary(mfa1)
plot(mfa1)
plotellipses(mfa1)
fviz_screeplot(mfa1)
M <- cor(data[,4:17])
corrplot(M, method="number")
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
library(ggplot2)
library(FactoMineR)
library(factoextra)
library(FactoInvestigate)
library(corrplot)
library(RDRToolbox)
data <- read.csv("./Data_16nov.csv")
mfa1 <- MFA(data[,4:13], group=c(6,4), type=c("s", "c"), ncp=10, name.group=c("obs","logs"))
print(mfa1)
print(mfa1$ind)
